scheme@(guile-user)> 10
$1 = 10

scheme@(guile-user)> (+ 5 3 4)
$2 = 12

scheme@(guile-user)> (- 9 1)
$3 = 8

scheme@(guile-user)> (/ 6 2)
$4 = 3

scheme@(guile-user)> (+ (* 2 4) (- 4 6))
$5 = 6

scheme@(guile-user)> (define a 3)
scheme@(guile-user)> a
$6 = 3

scheme@(guile-user)> (define b (+ a 1))
scheme@(guile-user)>
$7 = 4

scheme@(guile-user)> (+ a b (* a b))
$8 = 19

scheme@(guile-user)> (= a b)
$9 = #f

scheme@(guile-user)>
(if (and (> b a) (< b (* a b)))
    b
    a)
$10 = 4

scheme@(guile-user)>
(cond ((= a 4) 6)
      ((= b 4) (+ 6 7 a))
      (else 25))
$11 = 16

scheme@(guile-user)> (+ 2 (if (> b a) b a))
$12 = 6

scheme@(guile-user)>
(* (cond ((> a b) a)
	 ((< a b) b)
	 (else -1))
   (+ a 1))
$13 = 16
